name: Integration Tests

on:
  push:
    branches:
      - main

jobs:
  integration-tests:
    name: PACKER BUILD
    runs-on: ubuntu-latest


    steps:
      - name: Install MariaDB
        run: |
          sudo apt-get update
          sudo apt-get install -y mariadb-server

      - name: Start MariaDB Service
        run: sudo service mariadb start

      - name: Set up MySQL Root Password
        run: |
          sudo mysql -u root -e "ALTER USER 'root'@'localhost' IDENTIFIED BY 'saikumar123';"

      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build jar and run Maven
        run: |
            mvn install -DskipTests

      - name: check jar
        run: |
          cd target 
          ls 

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_KEY }}'

      - name: Run Integration Tests
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/CSYE6225?createDatabaseIfNotExist=true
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: saikumar123
        run: mvn -B verify

      - name: Run Packer init
        run: packer init packer/

      - name: Build Packer Image
        run: |
          packer build -var 'source_file=./target/webapp-0.0.1-SNAPSHOT.jar' -var 'tmp_service_file=./packer/your-app.service' -var 'config_file=./packer/ops-agent-config.yaml' packer/image.pkr.hcl | tee packer-output.txt

      - name: Extract Image Name
        run: |
          cat packer-output.txt | grep 'A disk image was created' | awk '{print $NF}' > image-name.txt

      - name: Create New Instance Template with Unique Name
        run: |
          TEMPLATE_NAME="new-template-$(date +%s)"
          IMAGE_NAME=$(cat image-name.txt)
          gcloud compute instance-templates create $TEMPLATE_NAME \
            --project=vakiti-dev \
            --machine-type=e2-medium \
            --image=$IMAGE_NAME \

      - name: Update Managed Instance Group
        run: |
          gcloud compute instance-groups managed set-instance-template webapp_manager \
            --template=$TEMPLATE_NAME \
            --project=vakiti-dev \
            --zone=us-central1-a

      - name: Start Rolling Update
        run: |
          gcloud compute instance-groups managed rolling-action start-update webapp_manager \
            --version template=$TEMPLATE_NAME \
            --project=vakiti-dev \
            --zone=us-central1-a

      - name: Wait for Rolling Update to Complete
        run: |
          INSTANCE_GROUP="webapp_manager"
          ZONE="us-central1-a"
          PROJECT_ID="vakiti-dev"
          UPDATE_FAILED=false

          while true; do
            STATUS=$(gcloud compute instance-groups managed describe $INSTANCE_GROUP \
                     --project=$PROJECT_ID \
                     --zone=$ZONE \
                     --format="value(status.isStable)")

            ERRORS=$(gcloud compute instance-groups managed list-errors $INSTANCE_GROUP \
                     --project=$PROJECT_ID \
                     --zone=$ZONE \
                     --format="value(error.errors[].message)")

            if [ "$STATUS" == "True" ]; then
              echo "Rolling update completed successfully."
              break
            elif [ -n "$ERRORS" ]; then
              echo "Errors detected during rolling update: $ERRORS"
              UPDATE_FAILED=true
              break
            else
              echo "Waiting for rolling update to complete..."
              sleep 30
            fi
          done

          if [ "$UPDATE_FAILED" = true ]; then
            echo "Rolling update failed. Exiting with error."
            exit 1
          fi
      
